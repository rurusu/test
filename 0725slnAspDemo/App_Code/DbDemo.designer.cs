#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbASP_demo")]
public partial class DbDemoDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void InserttCustomer(tCustomer instance);
  partial void UpdatetCustomer(tCustomer instance);
  partial void DeletetCustomer(tCustomer instance);
  partial void InsertAlbumn(Albumn instance);
  partial void UpdateAlbumn(Albumn instance);
  partial void DeleteAlbumn(Albumn instance);
  #endregion
	
	public DbDemoDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbASP_demoConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DbDemoDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbDemoDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbDemoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbDemoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tCustomer> tCustomer
	{
		get
		{
			return this.GetTable<tCustomer>();
		}
	}
	
	public System.Data.Linq.Table<Albumn> Albumn
	{
		get
		{
			return this.GetTable<Albumn>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCustomer")]
public partial class tCustomer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _c_id;
	
	private string _c_name;
	
	private string _c_phone;
	
	private string _c_email;
	
	private string _c_address;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onc_idChanging(int value);
    partial void Onc_idChanged();
    partial void Onc_nameChanging(string value);
    partial void Onc_nameChanged();
    partial void Onc_phoneChanging(string value);
    partial void Onc_phoneChanged();
    partial void Onc_emailChanging(string value);
    partial void Onc_emailChanged();
    partial void Onc_addressChanging(string value);
    partial void Onc_addressChanged();
    #endregion
	
	public tCustomer()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int c_id
	{
		get
		{
			return this._c_id;
		}
		set
		{
			if ((this._c_id != value))
			{
				this.Onc_idChanging(value);
				this.SendPropertyChanging();
				this._c_id = value;
				this.SendPropertyChanged("c_id");
				this.Onc_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_name", DbType="NVarChar(50)")]
	public string c_name
	{
		get
		{
			return this._c_name;
		}
		set
		{
			if ((this._c_name != value))
			{
				this.Onc_nameChanging(value);
				this.SendPropertyChanging();
				this._c_name = value;
				this.SendPropertyChanged("c_name");
				this.Onc_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_phone", DbType="NVarChar(50)")]
	public string c_phone
	{
		get
		{
			return this._c_phone;
		}
		set
		{
			if ((this._c_phone != value))
			{
				this.Onc_phoneChanging(value);
				this.SendPropertyChanging();
				this._c_phone = value;
				this.SendPropertyChanged("c_phone");
				this.Onc_phoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_email", DbType="NVarChar(50)")]
	public string c_email
	{
		get
		{
			return this._c_email;
		}
		set
		{
			if ((this._c_email != value))
			{
				this.Onc_emailChanging(value);
				this.SendPropertyChanging();
				this._c_email = value;
				this.SendPropertyChanged("c_email");
				this.Onc_emailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_address", DbType="NVarChar(50)")]
	public string c_address
	{
		get
		{
			return this._c_address;
		}
		set
		{
			if ((this._c_address != value))
			{
				this.Onc_addressChanging(value);
				this.SendPropertyChanging();
				this._c_address = value;
				this.SendPropertyChanged("c_address");
				this.Onc_addressChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Albumn")]
public partial class Albumn : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PID;
	
	private string _PDate;
	
	private string _PDescription;
	
	private string _PPath;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnPDateChanging(string value);
    partial void OnPDateChanged();
    partial void OnPDescriptionChanging(string value);
    partial void OnPDescriptionChanged();
    partial void OnPPathChanging(string value);
    partial void OnPPathChanged();
    #endregion
	
	public Albumn()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PID
	{
		get
		{
			return this._PID;
		}
		set
		{
			if ((this._PID != value))
			{
				this.OnPIDChanging(value);
				this.SendPropertyChanging();
				this._PID = value;
				this.SendPropertyChanged("PID");
				this.OnPIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDate", DbType="NVarChar(MAX)")]
	public string PDate
	{
		get
		{
			return this._PDate;
		}
		set
		{
			if ((this._PDate != value))
			{
				this.OnPDateChanging(value);
				this.SendPropertyChanging();
				this._PDate = value;
				this.SendPropertyChanged("PDate");
				this.OnPDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string PDescription
	{
		get
		{
			return this._PDescription;
		}
		set
		{
			if ((this._PDescription != value))
			{
				this.OnPDescriptionChanging(value);
				this.SendPropertyChanging();
				this._PDescription = value;
				this.SendPropertyChanged("PDescription");
				this.OnPDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPath", DbType="NVarChar(MAX)")]
	public string PPath
	{
		get
		{
			return this._PPath;
		}
		set
		{
			if ((this._PPath != value))
			{
				this.OnPPathChanging(value);
				this.SendPropertyChanging();
				this._PPath = value;
				this.SendPropertyChanged("PPath");
				this.OnPPathChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
